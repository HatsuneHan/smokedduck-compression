# name: test/sql/lineage_v2/l_bnj/test_bnj.test
# description: Test Block Nested Loop Join
# group: [l_bnj]
# plan_joinref.cpp has details on when this physical operator is used

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

statement ok
CREATE TABLE t2(i INTEGER);

statement ok
INSERT INTO t1 SELECT i+1, i FROM range(0,10) tbl(i);
INSERT INTO t2 VALUES (1), (2), (1025);

statement ok
pragma enable_profiling;
PRAGMA enable_lineage;

query IIIII
select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1, t2 where t1.j == t2.i or t1.i == t2.i
----
1	0	2	1	1
0	0	1	0	1
2	1	3	2	2
1	1	2	1	2



query III
select t1.rowid, t1.i, t1.j from t1 semi join t2 on t1.j == t2.i or t1.i == t2.i
----
0	1	0
1	2	1
2	3	2


query IIIII
select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1 right join t2 on t1.j == t2.i or t1.i == t2.i
----
1	0	2	1	1
0	0	1	0	1
2	1	3	2	2
1	1	2	1	2
NULL	2	NULL	NULL	1025


query IIII
select t1.rowid, t2.rowid, t1.i, t1.j from t1 left join t2 on t1.j == t2.i or t1.i == t2.i
----
1	0	2	1
0	0	1	0
2	1	3	2
1	1	2	1
3	NULL	4	3
4	NULL	5	4
5	NULL	6	5
6	NULL	7	6
7	NULL	8	7
8	NULL	9	8
9	NULL	10	9


query IIII
select t1.rowid, t2.rowid, t1.i, t1.j from t1 full outer join t2 on t1.j == t2.i or t1.i == t2.i
----
1	0	2	1
0	0	1	0
2	1	3	2
1	1	2	1
3	NULL	4	3
4	NULL	5	4
5	NULL	6	5
6	NULL	7	6
7	NULL	8	7
8	NULL	9	8
9	NULL	10	9
NULL	2	NULL	NULL


statement ok
PRAGMA disable_lineage;
pragma disable_profiling;

query III
pragma Provenance("lineage", "select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1, t2 where t1.j == t2.i or t1.i == t2.i");
----
1	0	0
0	0	1
2	1	2
1	1	3

query II
pragma Provenance("why", "select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1, t2 where t1.j == t2.i or t1.i == t2.i");
----
[[1, 0]]	0
[[0, 0]]	1
[[2, 1]]	2
[[1, 1]]	3

query II
pragma Provenance("polynomial", "select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1, t2 where t1.j == t2.i or t1.i == t2.i");
----
1*0	0
0*0	1
2*1	2
1*1	3

query III
pragma Provenance("lineage", "select t1.rowid, t1.i, t1.j from t1 semi join t2 on t1.j == t2.i or t1.i == t2.i");
----
0	NULL	0
1	NULL	1
2	NULL	2

query II
pragma Provenance("why", "select t1.rowid, t1.i, t1.j from t1 semi join t2 on t1.j == t2.i or t1.i == t2.i");
----
[[0, NULL]]	0
[[1, NULL]]	1
[[2, NULL]]	2

# issues with NULL output
query II
pragma Provenance("polynomial", "select t1.rowid, t1.i, t1.j from t1 semi join t2 on t1.j == t2.i or t1.i == t2.i");
----


query III
pragma Provenance("lineage", "select t1.rowid, t2.rowid, t1.i, t1.j, t2.i from t1 right join t2 on t1.j == t2.i or t1.i == t2.i");
----
1	0	0
0	0	1
2	1	2
1	1	3
NULL	2	4

query III
pragma Provenance("lineage", "select t1.rowid, t2.rowid, t1.i, t1.j from t1 left join t2 on t1.j == t2.i or t1.i == t2.i");
----
1	0	0
0	0	1
2	1	2
1	1	3
3	NULL	4
4	NULL	5
5	NULL	6
6	NULL	7
7	NULL	8
8	NULL	9
9	NULL	10

query III
pragma Provenance("lineage", "select t1.rowid, t2.rowid, t1.i, t1.j from t1 full outer join t2 on t1.j == t2.i or t1.i == t2.i");
----
1	0	0
0	0	1
2	1	2
1	1	3
NULL	2	11
3	NULL	4
4	NULL	5
5	NULL	6
6	NULL	7
7	NULL	8
8	NULL	9
9	NULL	10
