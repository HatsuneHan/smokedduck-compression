# name: test/sql/lineage_v2/l_aggs/test_hash_agg.test
# description: Test Hash Aggregate Lineage
# group: [l_aggs]

statement ok
PRAGMA explain_output = PHYSICAL_ONLY;
PRAGMA threads=1;

statement ok
CREATE TABLE t1(i VARCHAR(10), j INTEGER);

statement ok
INSERT INTO t1 VALUES ('Haneen', 2),  ('Omar', 2), ('Haneen', 4), ('Mohammed', 1), ('Omar', 1), ('Haneen', 3), ('Mohammed', 2), ('Omar', 1)

statement ok
PRAGMA enable_lineage;

# standalone limit
query II
select i, list(distinct j) from t1 GROUP BY i
----
Haneen	[2, 4, 3]
Omar	[2, 1]
Mohammed	[1, 2]

query III
select i, list(j) , list(distinct j) from t1 GROUP BY i
----
Haneen	[2, 4, 3]	[2, 4, 3]
Omar	[2, 1, 1]	[2, 1]
Mohammed	[1, 2]	[1, 2]

query I
select count() from t1
----
8

statement ok
PRAGMA disable_intermediate_tables;
PRAGMA disable_lineage;
PRAGMA disable_optimizer;
PRAGMA threads=1;


query II
pragma Provenance("lineage", "select i, list(distinct j) from t1 GROUP BY i");
----
0	0
2	0
5	0
1	1
4	1
7	1
3	2
6	2


query II
pragma Provenance("why", "select i, list(distinct j) from t1 GROUP BY i");
----
[[0], [2], [5]]	0
[[1], [4], [7]]	1
[[3], [6]]	2

query II
pragma Provenance("polynomial", "select i, list(distinct j) from t1 GROUP BY i");
----
0+2+5	0
1+4+7	1
3+6	2

query II
pragma Provenance("lineage", "select i, list(j) , list(distinct j) from t1 GROUP BY i");
----
0	0
2	0
5	0
1	1
4	1
7	1
3	2
6	2

query II
pragma Provenance("why", "select i, list(j) , list(distinct j) from t1 GROUP BY i");
----
[[0], [2], [5]]	0
[[1], [4], [7]]	1
[[3], [6]]	2

query II
pragma Provenance("polynomial", "select i, list(j) , list(distinct j) from t1 GROUP BY i");
----
0+2+5	0
1+4+7	1
3+6	2

query II
pragma Provenance("lineage", "select count() from t1");
----
0	0
1	0
2	0
3	0
4	0
5	0
6	0
7	0

query II
pragma Provenance("why", "select count() from t1");
----
[[0], [1], [2], [3], [4], [5], [6], [7]]	0

query II
pragma Provenance("polynomial", "select count() from t1");
----
0+1+2+3+4+5+6+7	0

### add grouping set
### add having

